{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Card, Button } from 'semantic-ui-react';\nimport factory from '../factory';\nimport Layout from '../components/Layout';\nimport { Link } from '../routes';\n\nvar CampaignIndex =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CampaignIndex, _Component);\n\n  function CampaignIndex() {\n    _classCallCheck(this, CampaignIndex);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CampaignIndex).apply(this, arguments));\n  }\n\n  _createClass(CampaignIndex, [{\n    key: \"renderCampaigns\",\n    value: function renderCampaigns() {\n      var items = this.props.campaigns.map(function (address) {\n        return {\n          header: address,\n          description: __jsx(Link, {\n            route: \"campaigns/\".concat(address)\n          }, __jsx(\"a\", null, \"View Campaign\")),\n          style: {\n            overflowWrap: 'break-word'\n          },\n          fluid: true,\n          color: 'red'\n        };\n      });\n      return __jsx(Card.Group, {\n        items: items\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(Layout, null, __jsx(\"h3\", null, \"Open Campaigns\"), __jsx(Link, {\n        route: \"/campaigns/new\"\n      }, __jsx(\"a\", null, __jsx(Button, {\n        floated: \"right\",\n        content: \"Create Campaign\",\n        icon: \"add circle\",\n        primary: true\n      }))), this.renderCampaigns());\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var campaigns;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return factory.methods.getDeployedCampaigns().call();\n\n              case 2:\n                campaigns = _context.sent;\n                return _context.abrupt(\"return\", {\n                  campaigns: campaigns\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps() {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return CampaignIndex;\n}(Component);\n\nexport default CampaignIndex;","map":{"version":3,"sources":["E:/Blockchain Starter Projects/Ethereum-kickstarter-project/kickstarter-solidity/pages/index.js"],"names":["React","Component","Card","Button","factory","Layout","Link","CampaignIndex","items","props","campaigns","map","address","header","description","style","overflowWrap","fluid","color","renderCampaigns","methods","getDeployedCampaigns","call"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,mBAA7B;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,IAAT,QAAqB,WAArB;;IAEMC,a;;;;;;;;;;;;;sCAOgB;AACd,UAAMC,KAAK,GAAG,KAAKC,KAAL,CAAWC,SAAX,CAAqBC,GAArB,CAAyB,UAAAC,OAAO,EAAI;AAC9C,eAAO;AACHC,UAAAA,MAAM,EAAED,OADL;AAEHE,UAAAA,WAAW,EACP,MAAC,IAAD;AAAM,YAAA,KAAK,sBAAeF,OAAf;AAAX,aACI,iCADJ,CAHD;AAOHG,UAAAA,KAAK,EAAE;AAACC,YAAAA,YAAY,EAAE;AAAf,WAPJ;AAQHC,UAAAA,KAAK,EAAE,IARJ;AASHC,UAAAA,KAAK,EAAE;AATJ,SAAP;AAWH,OAZa,CAAd;AAaA,aAAO,MAAC,IAAD,CAAM,KAAN;AAAY,QAAA,KAAK,EAAEV;AAAnB,QAAP;AACH;;;6BAEO;AACJ,aACA,MAAC,MAAD,QACI,mCADJ,EAEI,MAAC,IAAD;AAAM,QAAA,KAAK,EAAC;AAAZ,SACI,iBACI,MAAC,MAAD;AACI,QAAA,OAAO,EAAC,OADZ;AAEI,QAAA,OAAO,EAAC,iBAFZ;AAGI,QAAA,IAAI,EAAC,YAHT;AAII,QAAA,OAAO;AAJX,QADJ,CADJ,CAFJ,EAYK,KAAKW,eAAL,EAZL,CADA;AAgBH;;;;;;;;;;;;;uBAvC2Bf,OAAO,CAACgB,OAAR,CAAgBC,oBAAhB,GAAuCC,IAAvC,E;;;AAAlBZ,gBAAAA,S;iDAEC;AAAEA,kBAAAA,SAAS,EAATA;AAAF,iB;;;;;;;;;;;;;;;;;;;EAJaT,S;;AA4C5B,eAAeM,aAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport { Card, Button } from 'semantic-ui-react';\r\nimport factory from '../factory';\r\nimport Layout from '../components/Layout';\r\nimport { Link } from '../routes';\r\n\r\nclass CampaignIndex extends Component{\r\n    static async getInitialProps(){\r\n        const campaigns = await factory.methods.getDeployedCampaigns().call();\r\n\r\n        return { campaigns };\r\n    }\r\n\r\n    renderCampaigns() {\r\n        const items = this.props.campaigns.map(address => {\r\n            return {\r\n                header: address,\r\n                description: (\r\n                    <Link route={`campaigns/${address}`}>\r\n                        <a>View Campaign</a>\r\n                    </Link>\r\n                ),\r\n                style: {overflowWrap: 'break-word'},\r\n                fluid: true,\r\n                color: 'red'\r\n            }\r\n        });\r\n        return <Card.Group items={items}/>\r\n    }\r\n\r\n    render(){\r\n        return (\r\n        <Layout>\r\n            <h3>Open Campaigns</h3>\r\n            <Link route=\"/campaigns/new\">\r\n                <a>\r\n                    <Button\r\n                        floated=\"right\"\r\n                        content=\"Create Campaign\"\r\n                        icon=\"add circle\"\r\n                        primary\r\n                    />\r\n                </a> \r\n            </Link>\r\n            {this.renderCampaigns()}\r\n        </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CampaignIndex;"]},"metadata":{},"sourceType":"module"}